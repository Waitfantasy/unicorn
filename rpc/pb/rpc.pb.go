// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Void struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Void) Reset()         { *m = Void{} }
func (m *Void) String() string { return proto.CompactTextString(m) }
func (*Void) ProtoMessage()    {}
func (*Void) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_167ead97adde0007, []int{0}
}
func (m *Void) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Void.Unmarshal(m, b)
}
func (m *Void) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Void.Marshal(b, m, deterministic)
}
func (dst *Void) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Void.Merge(dst, src)
}
func (m *Void) XXX_Size() int {
	return xxx_messageInfo_Void.Size(m)
}
func (m *Void) XXX_DiscardUnknown() {
	xxx_messageInfo_Void.DiscardUnknown(m)
}

var xxx_messageInfo_Void proto.InternalMessageInfo

type TransferResponse struct {
	MachineId            int64    `protobuf:"varint,1,opt,name=machineId,proto3" json:"machineId,omitempty"`
	Sequence             uint64   `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Timestamp            uint64   `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Reserved             int64    `protobuf:"varint,4,opt,name=reserved,proto3" json:"reserved,omitempty"`
	IdType               int64    `protobuf:"varint,5,opt,name=idType,proto3" json:"idType,omitempty"`
	Version              int64    `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferResponse) Reset()         { *m = TransferResponse{} }
func (m *TransferResponse) String() string { return proto.CompactTextString(m) }
func (*TransferResponse) ProtoMessage()    {}
func (*TransferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_167ead97adde0007, []int{1}
}
func (m *TransferResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferResponse.Unmarshal(m, b)
}
func (m *TransferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferResponse.Marshal(b, m, deterministic)
}
func (dst *TransferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferResponse.Merge(dst, src)
}
func (m *TransferResponse) XXX_Size() int {
	return xxx_messageInfo_TransferResponse.Size(m)
}
func (m *TransferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TransferResponse proto.InternalMessageInfo

func (m *TransferResponse) GetMachineId() int64 {
	if m != nil {
		return m.MachineId
	}
	return 0
}

func (m *TransferResponse) GetSequence() uint64 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *TransferResponse) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *TransferResponse) GetReserved() int64 {
	if m != nil {
		return m.Reserved
	}
	return 0
}

func (m *TransferResponse) GetIdType() int64 {
	if m != nil {
		return m.IdType
	}
	return 0
}

func (m *TransferResponse) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type TransferRequest struct {
	Uuid                 uint64   `protobuf:"varint,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferRequest) Reset()         { *m = TransferRequest{} }
func (m *TransferRequest) String() string { return proto.CompactTextString(m) }
func (*TransferRequest) ProtoMessage()    {}
func (*TransferRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_167ead97adde0007, []int{2}
}
func (m *TransferRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferRequest.Unmarshal(m, b)
}
func (m *TransferRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferRequest.Marshal(b, m, deterministic)
}
func (dst *TransferRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferRequest.Merge(dst, src)
}
func (m *TransferRequest) XXX_Size() int {
	return xxx_messageInfo_TransferRequest.Size(m)
}
func (m *TransferRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransferRequest proto.InternalMessageInfo

func (m *TransferRequest) GetUuid() uint64 {
	if m != nil {
		return m.Uuid
	}
	return 0
}

type MakeResponse struct {
	Uuid                 uint64   `protobuf:"varint,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MakeResponse) Reset()         { *m = MakeResponse{} }
func (m *MakeResponse) String() string { return proto.CompactTextString(m) }
func (*MakeResponse) ProtoMessage()    {}
func (*MakeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_167ead97adde0007, []int{3}
}
func (m *MakeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MakeResponse.Unmarshal(m, b)
}
func (m *MakeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MakeResponse.Marshal(b, m, deterministic)
}
func (dst *MakeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MakeResponse.Merge(dst, src)
}
func (m *MakeResponse) XXX_Size() int {
	return xxx_messageInfo_MakeResponse.Size(m)
}
func (m *MakeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MakeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MakeResponse proto.InternalMessageInfo

func (m *MakeResponse) GetUuid() uint64 {
	if m != nil {
		return m.Uuid
	}
	return 0
}

func init() {
	proto.RegisterType((*Void)(nil), "Void")
	proto.RegisterType((*TransferResponse)(nil), "TransferResponse")
	proto.RegisterType((*TransferRequest)(nil), "TransferRequest")
	proto.RegisterType((*MakeResponse)(nil), "MakeResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TaskServiceClient is the client API for TaskService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskServiceClient interface {
	MakeUUID(ctx context.Context, in *Void, opts ...grpc.CallOption) (*MakeResponse, error)
	Transfer(ctx context.Context, in *TransferRequest, opts ...grpc.CallOption) (*TransferResponse, error)
}

type taskServiceClient struct {
	cc *grpc.ClientConn
}

func NewTaskServiceClient(cc *grpc.ClientConn) TaskServiceClient {
	return &taskServiceClient{cc}
}

func (c *taskServiceClient) MakeUUID(ctx context.Context, in *Void, opts ...grpc.CallOption) (*MakeResponse, error) {
	out := new(MakeResponse)
	err := c.cc.Invoke(ctx, "/TaskService/MakeUUID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) Transfer(ctx context.Context, in *TransferRequest, opts ...grpc.CallOption) (*TransferResponse, error) {
	out := new(TransferResponse)
	err := c.cc.Invoke(ctx, "/TaskService/Transfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaskServiceServer is the server API for TaskService service.
type TaskServiceServer interface {
	MakeUUID(context.Context, *Void) (*MakeResponse, error)
	Transfer(context.Context, *TransferRequest) (*TransferResponse, error)
}

func RegisterTaskServiceServer(s *grpc.Server, srv TaskServiceServer) {
	s.RegisterService(&_TaskService_serviceDesc, srv)
}

func _TaskService_MakeUUID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).MakeUUID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TaskService/MakeUUID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).MakeUUID(ctx, req.(*Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_Transfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).Transfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TaskService/Transfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).Transfer(ctx, req.(*TransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TaskService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "TaskService",
	HandlerType: (*TaskServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MakeUUID",
			Handler:    _TaskService_MakeUUID_Handler,
		},
		{
			MethodName: "Transfer",
			Handler:    _TaskService_Transfer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor_rpc_167ead97adde0007) }

var fileDescriptor_rpc_167ead97adde0007 = []byte{
	// 256 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x41, 0x4b, 0xc4, 0x30,
	0x10, 0x85, 0xa9, 0x9b, 0xad, 0xbb, 0xa3, 0xe2, 0x9a, 0x83, 0x84, 0xe2, 0xa1, 0x04, 0x84, 0x3d,
	0x45, 0xd0, 0xbf, 0xe0, 0x65, 0x0f, 0x5e, 0x6a, 0xd7, 0xb3, 0xb1, 0x1d, 0x31, 0x2c, 0x4d, 0xb2,
	0x99, 0xb6, 0xe0, 0x3f, 0xf3, 0xe7, 0x49, 0xa3, 0xdb, 0xe2, 0xe2, 0x2d, 0xdf, 0xbc, 0xbc, 0xc9,
	0xcb, 0x83, 0x65, 0xf0, 0x95, 0xf2, 0xc1, 0xb5, 0x4e, 0xa6, 0xc0, 0x5e, 0x9c, 0xa9, 0xe5, 0x57,
	0x02, 0xab, 0x32, 0x68, 0x4b, 0xef, 0x18, 0x0a, 0x24, 0xef, 0x2c, 0x21, 0xbf, 0x81, 0x65, 0xa3,
	0xab, 0x0f, 0x63, 0x71, 0x53, 0x8b, 0x24, 0x4f, 0xd6, 0xb3, 0x62, 0x1a, 0xf0, 0x0c, 0x16, 0x84,
	0xfb, 0x0e, 0x6d, 0x85, 0xe2, 0x24, 0x4f, 0xd6, 0xac, 0x18, 0x79, 0x70, 0xb6, 0xa6, 0x41, 0x6a,
	0x75, 0xe3, 0xc5, 0x2c, 0x8a, 0xd3, 0x60, 0x70, 0x06, 0x24, 0x0c, 0x3d, 0xd6, 0x82, 0xc5, 0xb5,
	0x23, 0xf3, 0x6b, 0x48, 0x4d, 0x5d, 0x7e, 0x7a, 0x14, 0xf3, 0xa8, 0xfc, 0x12, 0x17, 0x70, 0xda,
	0x63, 0x20, 0xe3, 0xac, 0x48, 0xa3, 0x70, 0x40, 0x79, 0x0b, 0x97, 0x53, 0xf2, 0x7d, 0x87, 0xd4,
	0x72, 0x0e, 0xac, 0xeb, 0xcc, 0x4f, 0x66, 0x56, 0xc4, 0xb3, 0x94, 0x70, 0xfe, 0xa4, 0x77, 0x38,
	0x7e, 0xee, 0x9f, 0x3b, 0xf7, 0xaf, 0x70, 0x56, 0x6a, 0xda, 0x3d, 0x63, 0xe8, 0x4d, 0x85, 0x3c,
	0x87, 0xc5, 0x60, 0xd9, 0x6e, 0x37, 0x8f, 0x7c, 0xae, 0x86, 0x9e, 0xb2, 0x0b, 0xf5, 0x67, 0xc9,
	0x1d, 0x2c, 0x0e, 0x6f, 0xf3, 0x95, 0x3a, 0x8a, 0x91, 0x5d, 0xa9, 0xe3, 0x4a, 0xdf, 0xd2, 0x58,
	0xfb, 0xc3, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x90, 0x05, 0x26, 0x18, 0x83, 0x01, 0x00, 0x00,
}
